### Server ###
server.port=8882
### Notification Service ###
notification.service.url=http://localhost:8884
### AuthServer ###
auth.service=http://localhost:8080/realms/BookApplication/protocol/openid-connect/token
### Logging ###
logging.level.root=info
### Security ###
springdoc.swagger-ui.oauth.use-pkce-with-authorization-code-grant=true
springdoc.swagger-ui.oauth.client-id=catalogservice
springdoc.swagger-ui.oauth.client-secret=uIATId9GPbllMf3Rlv33hcrVQrAnw4lm
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/BookApplication/protocol/openid-connect/certs
### POSTGRES ###
spring.jpa.hibernate.ddl-auto=none
spring.datasource.url=jdbc:postgresql://localhost:5432/bookStock
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
### Fly Way ###
spring.flyway.user=postgres
spring.flyway.password=postgres
spring.flyway.schemas=public
spring.flyway.url=jdbc:postgresql://localhost:5432/bookStock
spring.flyway.locations=classpath:db/migration
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.sql-migration-suffixes=.sql
### Rabbit MQ ###
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
catalog.rabbitmq.queue.routing.key=catalog.queue.routing.key
catalog.rabbitmq.queue.exchange=catalog.queue.exchange
catalog.rabbitmq.queue-book-stock-request=stock.queue.book-stock-request
### Job Run ###
org.jobrunr.background-job-server.enabled=true
org.jobrunr.dashboard.enabled=true
org.jobrunr.job-scheduler.enabled=true
org.jobrunr.jobs.metrics.enabled=true
org.jobrunr.dashboard.port=8883
org.jobrunr.database.database-name=bookStock
org.jobrunr.background-job-server.delete-succeeded-jobs-after=36
org.jobrunr.background-job-server.metrics.enabled=true
### Kafka ###
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=stock-group
kafka.producer.topic.create-stock-request=create-stock-request
kafka.producer.topic.stock-updated-request=stock-updated-request
### Resilience4j ###
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
resilience4j.retry.instances.unstableKafkaService.max-attempts=5
resilience4j.retry.instances.unstableKafkaService.wait-duration=1